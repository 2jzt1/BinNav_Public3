name: Release on Tag

on:
  push:
    tags:
      - 'v*.*.*' # 匹配语义化版本标签，如v1.0.0, v2.1.3
      - 'v*.*.*-*' # 匹配预发布版本，如v1.0.0-beta.1

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # softprops/action-gh-release 会自动处理权限，但明确声明更好
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 设置Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 安装依赖
      - name: Install dependencies
        run: npm ci

      # 运行测试（如果有）
      - name: Run tests
        run: npm test --if-present

      # 构建项目（仅用于验证构建是否成功）
      - name: Build
        run: npm run build

      # 检查是否为预发布版本
      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ -[a-zA-Z] ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "这是预发布版本"
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "这是正式发布版本"
          fi

      # 获取标签描述
      - name: Get tag message
        id: tag_message
        run: |
          # 获取标签的注释信息
          TAG_MESSAGE=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
          if [ -z "$TAG_MESSAGE" ]; then
            TAG_MESSAGE="Release ${{ github.ref_name }}"
          fi

          # 输出到GitHub Actions（处理多行字符串）
          {
            echo 'message<<EOF'
            echo "$TAG_MESSAGE"
            echo EOF
          } >> $GITHUB_OUTPUT

      # 创建Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: BinNav ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
          body: ${{ steps.tag_message.outputs.message }}
          draft: false
          # softprops/action-gh-release 会自动使用 GITHUB_TOKEN

      # 通知发布成功
      - name: Release notification
        run: |
          echo "✅ Release ${{ github.ref_name }} created successfully!"
          echo "� Release URL: https://github.com/sindricn/BinNav/releases/tag/${{ github.ref_name }}"
